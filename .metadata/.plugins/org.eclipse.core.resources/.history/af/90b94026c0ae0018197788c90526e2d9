package fr.Dyrazz.DataBase.Commands;

import org.bukkit.Particle;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.scheduler.BukkitRunnable;

import fr.Dyrazz.DataBase.Main;
import fr.Dyrazz.DataBase.Events.EventsCosmetics;

public class CommandsParticles implements CommandExecutor {

	public static double x, y, z;
	public static double pointAccount;
	public static double i;
	public static double turns;
	public static double radius;
	
	@Override
	public boolean onCommand(CommandSender sender, Command command, String s, String[] args) {
		Player p = (Player) sender;
		EventsCosmetics.runParticules(p, Particle.LAVA, Double.parseDouble(args[0]), Double.parseDouble(args[1]), Double.parseDouble(args[2]));
		return true;
	}
	
	
	public static void runParticules(Player p, Particle par, double p_pointAccount, double p_turns, double p_radius) {
		pointAccount = p_pointAccount;
		turns = p_turns;
		radius = p_radius;
		
		new BukkitRunnable() {
			@Override
			public void run() {
				p.spawnParticle(par, EventsCosmetics.x + radius * Math.cos(2 * turns * Math.PI * EventsCosmetics.i / EventsCosmetics.pointAccount), EventsCosmetics.y + 2.25 * EventsCosmetics.i / EventsCosmetics.pointAccount, EventsCosmetics.z + radius * Math.sin(2 * turns * Math.PI * EventsCosmetics.i / EventsCosmetics.pointAccount), 1, 0, 0, 0, 0);
				p.spawnParticle(par, EventsCosmetics.x + radius * Math.cos(2 * turns * Math.PI * EventsCosmetics.i/ EventsCosmetics.pointAccount + Math.PI), EventsCosmetics.y + 2.25 * EventsCosmetics.i / EventsCosmetics.pointAccount, EventsCosmetics.z + radius * Math.sin(2 * turns * Math.PI * EventsCosmetics.i/ EventsCosmetics.pointAccount + Math.PI), 1, 0, 0, 0, 0);
				if (i == pointAccount - 1)
					this.cancel();
				else
					i++;
			}
		}.runTaskTimer(Main.getPlugin(), 0, 0);
	}

}
